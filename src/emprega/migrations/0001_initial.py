# Generated by Django 4.1.4 on 2022-12-26 18:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import emprega.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "nivel_usuario",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Super Admin"),
                            (2, "Administrador"),
                            (3, "Empregador"),
                            (4, "Candidato"),
                        ],
                        default=4,
                        verbose_name="Nível de Usuário",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=255, verbose_name="Nome completo"),
                ),
                (
                    "cpf",
                    models.CharField(
                        max_length=11,
                        unique=True,
                        validators=[emprega.validators.validate_cpf],
                        verbose_name="CPF",
                    ),
                ),
                (
                    "data_nascimento",
                    models.DateField(verbose_name="Data de nascimento"),
                ),
                (
                    "sexo",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "Feminino"),
                            (2, "Masculino"),
                            (3, "Não Informado"),
                            (4, "Ambos"),
                        ],
                        null=True,
                        verbose_name="Sexo",
                    ),
                ),
                (
                    "estado_civil",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "Solteiro"),
                            (2, "Casado"),
                            (3, "Separado"),
                            (4, "Divorciado"),
                            (5, "Viúvo"),
                            (6, "União Estável"),
                            (7, "Outro"),
                        ],
                        null=True,
                        verbose_name="Estado civil",
                    ),
                ),
                (
                    "tipo_deficiencia",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "Auditiva"),
                            (2, "Mental"),
                            (3, "Física"),
                            (4, "Visual"),
                            (5, "Múltiplo"),
                            (6, "Outro"),
                        ],
                        null=True,
                        verbose_name="Tipo de deficiência",
                    ),
                ),
                (
                    "area_atuacao",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Área de atuação",
                    ),
                ),
                (
                    "cargo",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Cargo"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        blank=True, max_length=14, null=True, verbose_name="Telefone"
                    ),
                ),
                (
                    "foto",
                    models.ImageField(
                        blank=True, null=True, upload_to="fotos", verbose_name="Foto"
                    ),
                ),
                (
                    "curriculo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="curriculos",
                        verbose_name="Currículo",
                    ),
                ),
                (
                    "habilitado",
                    models.BooleanField(default=True, verbose_name="habilitado"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Empresa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cnpj",
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[emprega.validators.validate_cnpj],
                        verbose_name="CNPJ",
                    ),
                ),
                (
                    "razao_social",
                    models.CharField(max_length=255, verbose_name="Razão Social"),
                ),
                (
                    "nome_fantasia",
                    models.CharField(max_length=255, verbose_name="Nome Fantasia"),
                ),
                (
                    "ramo_atividade",
                    models.CharField(max_length=255, verbose_name="Ramo de atividade"),
                ),
                (
                    "numero_funcionarios",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Número de funcionários"
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        blank=True, max_length=14, null=True, verbose_name="Telefone"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "site",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Site"
                    ),
                ),
                (
                    "foto",
                    models.ImageField(
                        blank=True, null=True, upload_to="fotos", verbose_name="Foto"
                    ),
                ),
                (
                    "descricao",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Endereco",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cep",
                    models.CharField(
                        blank=True, max_length=8, null=True, verbose_name="CEP"
                    ),
                ),
                (
                    "logradouro",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Endereço"
                    ),
                ),
                (
                    "numero",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Número"
                    ),
                ),
                (
                    "complemento",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Complemento",
                    ),
                ),
                (
                    "bairro",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Bairro"
                    ),
                ),
                (
                    "cidade",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Cidade"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="Estado"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Vaga",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("cargo", models.CharField(max_length=255, verbose_name="Cargo")),
                ("atividades", models.TextField(verbose_name="Atividades")),
                ("requisitos", models.TextField(verbose_name="Requisitos")),
                (
                    "pessoa_deficiencia",
                    models.BooleanField(
                        default=False, verbose_name="Pessoa com deficiência"
                    ),
                ),
                (
                    "salario",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Salário"
                    ),
                ),
                (
                    "jornada_trabalho",
                    models.CharField(
                        max_length=255, verbose_name="Jornada de trabalho"
                    ),
                ),
                (
                    "modelo_trabalho",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Presencial"), (2, "Remoto"), (3, "Híbrido")],
                        verbose_name="Modelo de trabalho",
                    ),
                ),
                (
                    "regime_contratual",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "CLT"),
                            (2, "PJ"),
                            (3, "Estágio"),
                            (4, "Temporário"),
                            (5, "Freelancer"),
                            (6, "Voluntário"),
                            (7, "Outro"),
                        ],
                        verbose_name="Regime contratual",
                    ),
                ),
                (
                    "sexo",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "Feminino"),
                            (2, "Masculino"),
                            (3, "Não Informado"),
                            (4, "Ambos"),
                        ],
                        null=True,
                        verbose_name="Sexo",
                    ),
                ),
                (
                    "idade_minima",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Idade mínima"
                    ),
                ),
                (
                    "idade_maxima",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Idade máxima"
                    ),
                ),
                (
                    "quantidade_vagas",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Quantidade de vagas"
                    ),
                ),
                (
                    "habilitado",
                    models.BooleanField(default=True, verbose_name="Habilitado"),
                ),
                (
                    "beneficios",
                    models.TextField(blank=True, null=True, verbose_name="Benefícios"),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vagas_empresa",
                        to="emprega.empresa",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ObjetivoProfissional",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("cargo", models.CharField(max_length=255, verbose_name="Cargo")),
                (
                    "salario",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Pretensão salarial",
                    ),
                ),
                (
                    "modelo_trabalho",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Presencial"), (2, "Remoto"), (3, "Híbrido")],
                        verbose_name="Modelo de trabalho",
                    ),
                ),
                (
                    "regime_contratual",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "CLT"),
                            (2, "PJ"),
                            (3, "Estágio"),
                            (4, "Temporário"),
                            (5, "Freelancer"),
                            (6, "Voluntário"),
                            (7, "Outro"),
                        ],
                        verbose_name="Regime contratual",
                    ),
                ),
                (
                    "jornada_trabalho",
                    models.CharField(
                        max_length=255, verbose_name="Jornada de trabalho"
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="objetivo_profissional_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Idioma",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("nome", models.CharField(max_length=255, verbose_name="Nome")),
                (
                    "nivel",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Básico"),
                            (2, "Intermediário"),
                            (3, "Avançado"),
                            (4, "Fluente"),
                            (5, "Nativo"),
                        ],
                        verbose_name="Nível",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="idiomas_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FormacaoAcademica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "instituicao",
                    models.CharField(max_length=255, verbose_name="Instituição"),
                ),
                ("curso", models.CharField(max_length=255, verbose_name="Curso")),
                (
                    "nivel",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Ensino Fundamental"),
                            (2, "Ensino Médio"),
                            (3, "Ensino Superior"),
                            (4, "Pós-Graduação"),
                            (5, "Mestrado"),
                            (6, "Doutorado"),
                            (7, "Pós-Doutorado"),
                        ],
                        verbose_name="Nível",
                    ),
                ),
                ("data_inicio", models.DateField(verbose_name="Data de início")),
                ("data_conclusao", models.DateField(verbose_name="Data de conclusão")),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="formacoes_academicas_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ExperienciaProfissional",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("empresa", models.CharField(max_length=255, verbose_name="Empresa")),
                ("cargo", models.CharField(max_length=255, verbose_name="Cargo")),
                (
                    "salario",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Salário"
                    ),
                ),
                ("atividades", models.TextField(verbose_name="Atividades")),
                ("data_inicio", models.DateField(verbose_name="Data de início")),
                ("data_fim", models.DateField(verbose_name="Data de fim")),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experiencias_profissionais_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="empresa",
            name="endereco",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="empresa_endereco",
                to="emprega.endereco",
            ),
        ),
        migrations.AddField(
            model_name="empresa",
            name="usuario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="empresas_usuario",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="CursoEspecializacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "instituicao",
                    models.CharField(max_length=255, verbose_name="Instituição"),
                ),
                ("curso", models.CharField(max_length=255, verbose_name="Curso")),
                ("data_conclusao", models.DateField(verbose_name="Data de conclusão")),
                ("duracao_horas", models.IntegerField(verbose_name="Duração em horas")),
                (
                    "certificado",
                    models.FileField(
                        null=True, upload_to="certificados", verbose_name="Certificado"
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cursos_especializacao_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Candidato",
            fields=[],
            options={
                "verbose_name": "Candidato",
                "verbose_name_plural": "Candidatos",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("emprega.usuario",),
        ),
        migrations.CreateModel(
            name="Empregador",
            fields=[],
            options={
                "verbose_name": "Empregador",
                "verbose_name_plural": "Empregadores",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("emprega.usuario",),
        ),
        migrations.CreateModel(
            name="Candidatura",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidaturas_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vaga",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidaturas_vaga",
                        to="emprega.vaga",
                    ),
                ),
            ],
            options={
                "unique_together": {("vaga", "usuario")},
            },
        ),
        migrations.CreateModel(
            name="Avaliacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avaliacoes_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vaga",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avaliacoes_vaga",
                        to="emprega.vaga",
                    ),
                ),
            ],
            options={
                "unique_together": {("vaga", "usuario")},
            },
        ),
    ]
